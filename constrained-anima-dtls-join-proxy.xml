<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY RFC8366 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8366.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
<!ENTITY I-D.ietf-ace-coap-est SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ace-coap-est.xml">
<!ENTITY I-D.ietf-core-multipart-ct SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-multipart-ct.xml">
<!ENTITY I-D.ietf-6tisch-enrollment-enhanced-beacon SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-enrollment-enhanced-beacon.xml">
<!ENTITY I-D.ietf-anima-constrained-voucher SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-constrained-voucher.xml">
<!ENTITY I-D.ietf-anima-grasp SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-grasp.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.richardson-anima-state-for-joinrouter SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.richardson-anima-state-for-joinrouter.xml">
<!ENTITY RFC6690 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6690.xml">
<!ENTITY RFC7030 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7030.xml">
<!ENTITY RFC7228 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7228.xml">
<!ENTITY I-D.kumar-dice-dtls-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.kumar-dice-dtls-relay.xml">
<!ENTITY RFC4944 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4944.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-vanderstok-anima-constrained-join-proxy-05" category="std">

  <front>
    <title abbrev="Join-Proxy">Constrained Join Proxy for Bootstrapping Protocols</title>

    <author initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>
    <author initials="P." surname="van der Stok" fullname="Peter van der Stok">
      <organization>vanderstok consultancy</organization>
      <address>
        <email>consultancy@vanderstok.org</email>
      </address>
    </author>
    <author initials="P." surname="Kampanakis" fullname="Panos Kampanakis">
      <organization>Cisco Systems</organization>
      <address>
        <email>pkampana@cisco.com</email>
      </address>
    </author>

    <date year="2020" month="October" day="19"/>

    <area>Internet</area>
    <workgroup>anima Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a protocol to securely assign a pledge to a domain, represented by an EST server, using an intermediary node between pledge and EST server. This intermediary node is known as a “constrained Join Proxy”.</t>

<t>This document extends the work of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> by replacing the Circuit-proxy by a stateless/stateful constrained (CoAP) Join Proxy.
It transports join traffic from the pledge to the Registrar without requiring per-client state.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Enrolment of new nodes into networks with enrolled nodes present is described in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (“BRSKI”) and makes use of Enrolment over Secure Transport (EST) <xref target="RFC7030"/>
with <xref target="RFC8366"/> vouchers to securely enroll devices.
BRSKI connects new devices (“pledges”) to extended EST servers (“Registrars”) via a Join Proxy.</t>

<t>The specified solutions use https and may be too large in terms of code space or bandwidth required for constrained devices.
Constrained devices possibly part of constrained networks <xref target="RFC7228"/> typically implement the IPv6 over Low-Power Wireless personal Area Networks (6LoWPAN) <xref target="RFC4944"/> and Constrained Application Protocol (CoAP) <xref target="RFC7252"/>.</t>

<t>CoAP can be run with the Datagram Transport Layer Security (DTLS) <xref target="RFC6347"/> as a security protocol for authenticity and confidentiality of the messages.
This is known as the “coaps” scheme.
A constrained version of EST, using Coap and DTLS, is described in <xref target="I-D.ietf-ace-coap-est"/>. The {I-D.ietf-anima-constrained-voucher} describes the BRSKI extensions to the EST server.</t>

<t>DTLS is a client-server protocol relying on the underlying IP layer to perform the routing between the DTLS Client and the DTLS Server.
However, the new “joining” device will not be IP routable until it is authenticated to the network.
A new “joining” device can only initially use a link-local IPv6 address to communicate with a neighbour node using  neighbour discovery <xref target="RFC6775"/> until it receives the necessary network configuration parameters.
However, before the device can receive these configuration parameters, it needs to authenticate itself to the network to which it connects.
IPv6 routing is necessary to establish a connection between joining device and the extended EST server.</t>

<t>A DTLS connection is required between Pledge and EST server.</t>

<t>This document specifies a new form of Join Proxy and protocol to act as intermediary between joining device and EST server to establish a connection between joining device and EST server.</t>

<t>This document is very much inspired by text published earlier in <xref target="I-D.kumar-dice-dtls-relay"/>.
<xref target="I-D.richardson-anima-state-for-joinrouter"/> outlined the various options for building a join proxy.
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> adopted only the Circuit Proxy method (1), leaving the other methods as future work.
This document standardizes the CoAP/DTLS (method 4).</t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The following terms are defined in <xref target="RFC8366"/>, and are used
identically as in that document: artifact, imprint, domain, Join
Registrar/Coordinator (JRC), Manufacturer Authorized Signing Authority
(MASA), pledge, Trust of First Use (TOFU), and Voucher.</t>

</section>
<section anchor="reqlang" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="join-proxy-functionality" title="Join Proxy functionality">

<t>As depicted in the <xref target="fig-net"/>, the joining Device, or pledge (P), in an LLN mesh
can be more than one hop away from the EST server (E) and not yet authenticated into the network.</t>

<t>In this situation, it can only communicate one-hop to its nearest neighbour, the Join Proxy (J) using their link-local  IPv6 addresses.
However, the Pledge (P) needs to communicate with end-to-end security with a Registrar hosting the EST server (E) to authenticate and get the relevant system/network parameters.
If the Pledge (P) initiates a DTLS connection to the EST server whose IP address has been pre-configured, then the packets are dropped at the Join Proxy (J) since the Pledge (P) is not yet admitted to the network or there is no IP routability to Pledge (P) for any returned messages.</t>

<figure title="multi-hop enrolment." align="left" anchor="fig-net"><artwork><![CDATA[
          ++++ multi-hop
          |E |---- mesh  +--+        +--+
          |  |    \      |J |........|P |
          ++++     \-----|  |        |  |
       EST server        +--+        +--+
       Registrar       Join Proxy   Pledge
                                    "Joining" Device

]]></artwork></figure>

<t>Without routing the Pledge (P) cannot establish a secure connection to the EST server (E) in the network assuming   appropriate credentials are exchanged out-of-band, e.g. a hash of the Pledge (P)’s raw public key could be provided to the EST server (E).</t>

<t>Furthermore, the Pledge (P) may be unaware of the IP address of the EST server (E) to initiate a DTLS connection and perform authentication.</t>

<t>To overcome the problems with non-routability of DTLS packets and/or discovery of the destination address of the EST  Server to contact, the Join Proxy is introduced.
This Join Proxy functionality is configured into all authenticated devices in the network which may act as the Join Proxy for newly joining nodes.
The Join Proxy allows for routing of the packets from the Pledge using IP routing to the intended EST Server.</t>

</section>
<section anchor="join-proxy-specification" title="Join Proxy specification">

<t>A Join Proxy can operate in two modes:</t>

<t><list style="symbols">
  <t>Statefull mode</t>
  <t>Stateless mode</t>
</list></t>

<section anchor="statefull-join-proxy" title="Statefull Join Proxy">

<t>In stateful mode, the joining node forwards the DTLS messages to the EST server.</t>

<t>Assume that the Pledge does not know the IP address of the EST Server it needs to contact.
In that situation, the Join Proxy must know the (configured or discovered) IP address of a EST server.
(Discovery can be based upon <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 4.3, or via DNS-SD service discovery <xref target="RFC6763"/>)
The Pledge initiates its request as if the Join Proxy is the intended EST server.
The Join Proxy changes the IP packet (without modifying the DTLS message) by modifying both  the source and destination addresses to forward the message to the intended EST Server.
The Join Proxy maintains a 4-tuple array to translate the DTLS messages received from the EST Server and forward it to the EST Client.
This is a form of Network Address translation, where the Join Proxy acts as a forward proxy.
In <xref target="fig-statefull2"/> the various steps of the message flow are shown, with 5684 being the standard coaps port:</t>

<figure title="constrained statefull joining message flow with EST server address known to Join Proxy." align="left" anchor="fig-statefull2"><artwork><![CDATA[
+------------+------------+-------------+--------------------------+
| EST Client | Join Proxy | EST Server  |          Message         |
|    (P)     |     (J)    |    (E)      | Src_IP:port | Dst_IP:port|
+------------+------------+-------------+-------------+------------+
|      --ClientHello-->                 |   IP_P:p_P  | IP_Ja:5684 |
|                    --ClientHello-->   |   IP_Jb:p_Jb| IP_E:5684  |
|                                       |             |            |
|                    <--ServerHello--   |   IP_E:5684 | IP_Jb:p_Jb |
|                            :          |             |            |
|       <--ServerHello--     :          |   IP_Ja:5684| IP_P:p_P   |
|               :            :          |             |            |
|               :            :          |       :     |    :       |
|               :            :          |       :     |    :       |
|        --Finished-->       :          |   IP_P:p_P  | IP_Ja:5684 |
|                      --Finished-->    |   IP_Jb:p_Jb| IP_E:5684  |
|                                       |             |            |
|                      <--Finished--    |   IP_E:5684 | IP_Jb:p_Jb |
|        <--Finished--                  |   IP_Ja:5684| IP_P:p_P   |
|              :             :          |      :      |     :      |
+---------------------------------------+-------------+------------+
IP_P:p_P = Link-local IP address and port of Pledge (DTLS Client)
IP_E:5684 = Global IP address and coaps port of EST Server
IP_Ja:5684 = Link-local IP address and coaps port of Join Proxy
IP_Jb:p_Rb = Global IP address and port of Join proxy
]]></artwork></figure>

</section>
<section anchor="stateless-join-proxy" title="Stateless Join Proxy">

<t>The Join Proxy is stateless to minimize the requirements on the constrained Join Proxy device.
Stateless operation requires no memory in the Join Proxy device, but may also reduce the CPU impact as the device does not need to search through a state table.</t>

<t>When a client joining device attempts a DTLS connection to the EST server, it uses its link-local IP address as its IP source address.
This message is transmitted one-hop to a neighbouring (join proxy) node.
Under normal circumstances, this message would be dropped at the neighbour node since the joining device is not yet IP routable or it is not yet authenticated to send messages through the network.
However, if the neighbour device has the Join Proxy functionality enabled, it routes the DTLS message to a specific EST server.
Additional security mechanisms need to exist to prevent this routing functionality being used by rogue nodes to bypass any network authentication procedures.</t>

<t>If an untrusted DTLS Client that can only use link-local addressing wants to contact a trusted end-point EST server, it sends the DTLS message to the Join Proxy.</t>

<t>The Join Proxy extends this message into a new type of message called Join ProxY (JPY) message and sends it on to the EST server.</t>

<t>The JPY message payload consists of two parts:</t>

<t><list style="symbols">
  <t>Header (H) field: consisting of the source link-local address and port of the Pledge (P), and</t>
  <t>Contents (C) field: containing the original DTLS message.</t>
</list></t>

<t>On receiving the JPY message, the EST server retrieves the two parts.</t>

<t>The EST server transiently stores the Header field information.
The EST server uses the Contents field to execute the EST server functionality.
However, when the EST server replies, it also extends its DTLS message with the header field in a JPY message and sends it back to the Join Proxy.
The EST server SHOULD NOT assume that it can decode the Header Field, it should simply repeat it when responding.
The Header contains the original source link-local address and port of the DTLS Client from the transient state stored earlier (which can now be discarded) and the Contents field contains the DTLS message.</t>

<t>On receiving the JPY message, the Join Proxy retrieves the two parts.
It uses the Header field to route the DTLS message retrieved from the Contents field to the Pledge.</t>

<t>The <xref target="fig-stateless"/> depicts the message flow diagram:</t>

<figure title="constrained stateless joining message flow." align="left" anchor="fig-stateless"><artwork><![CDATA[
+--------------+------------+---------------+-----------------------+
| EST  Client  | Join Proxy |    EST server |        Message        |
|     (P)      |     (J)    |      (E)      |Src_IP:port|Dst_IP:port|
+--------------+------------+---------------+-----------+-----------+
|      --ClientHello-->                     | IP_P:p_P  |IP_Ja:p_Ja |
|                    --JPY[H(IP_P:p_P),-->  | IP_Jb:p_Jb|IP_E:p_Ea  |
|                          C(ClientHello)]  |           |           |
|                    <--JPY[H(IP_P:p_P),--  | IP_E:p_Ea |IP_Jb:p_Jb |
|                         C(ServerHello)]   |           |           |
|      <--ServerHello--                     | IP_Ja:p_Ja|IP_P:p_P   |
|              :                            |           |           |
|              :                            |     :     |    :      |
|                                           |     :     |    :      |
|      --Finished-->                        | IP_P:p_P  |IP_Ja:p_Ja |
|                    --JPY[H(IP_P:p_P),-->  | IP_Jb:p_Jb|IP_E:p_Ea  |
|                          C(Finished)]     |           |           |
|                    <--JPY[H(IP_P:p_P),--  | IP_E:p_Ea |IP_Jb:p_Jb |
|                         C(Finished)]      |           |           |
|      <--Finished--                        | IP_Ja:p_Ja|IP_P:p_P   |
|              :                            |     :     |    :      |
+-------------------------------------------+-----------+-----------+
IP_P:p_P = Link-local IP address and port of the Pledge
IP_E:p_Ea = Global IP address and join port of EST Server
IP_Ja:p_Ja = Link-local IP address and join port of Join Proxy
IP_Jb:p_Jb = Global IP address and port of Join Proxy

JPY[H(),C()] = Join Proxy message with header H and content C

]]></artwork></figure>

</section>
<section anchor="stateless-message-structure" title="Stateless Message structure">

<t>The JPY message is constructed as a payload with media-type application/multipart-core specified in <xref target="I-D.ietf-core-multipart-ct"/>.</t>

<t>Header and Contents fields use different media formats:</t>

<t><list style="numbers">
  <t>header field: application/cbor containing a CBOR array <xref target="RFC7049"/> with the pledge IPv6 Link Local address as a 16-byte binary value, the pledge’s UDP port number, if different from 5684, as a CBOR integer, and the proxy’s ifindex or other identifier for the physical port on which the pledge is connected. Header is not DTLS encrypted.</t>
  <t>Content field: Any of the media types specified in <xref target="I-D.ietf-ace-coap-est"/> and <xref target="I-D.ietf-anima-constrained-voucher"/> dependent on the function that is requested:</t>
</list></t>

<figure><artwork><![CDATA[
 * application/pkcs7-mime; smime-type=server-generated-key
 * application/pkcs7-mime; smime-type=certs-only
 * application/voucher-cms+cbor
 * application/voucher-cose+cbor
 * application/pkcs8
 * application/csrattrs
 * application/pkcs10
 * application/pkix-cert
]]></artwork></figure>

<t>(XXX- add CDDL for CBOR array above)</t>

<t>The content fields are DTLS encrypted. In CBOR diagnostic notation the payload JPY[H(IP_P:p_P), with cf is content-format of DTLS-content, will look like:</t>

<figure><artwork><![CDATA[
      [ 60: [IP_p, p_P, ident]
        cf: h'DTLS-content']
]]></artwork></figure>

<t>Examples are shown in <xref target="examples"/>.</t>

</section>
</section>
<section anchor="comparison-of-stateless-and-statefull-modes" title="Comparison of stateless and statefull modes">

<t>The stateful and stateless mode of operation for the Join Proxy have
their advantages and disadvantages.  This section should enable to
make a choice between the two modes based on the available device
resources and network bandwidth.</t>

<figure title="Comparison between stateful and stateless mode" align="left" anchor="fig-comparison"><artwork><![CDATA[
+-------------+----------------------------+------------------------+
| Properties  |         Stateful mode      |     Stateless mode     |
+-------------+----------------------------+------------------------+
| State       |The Join Proxy needs        | No information is      |
| Information |additional storage to       | maintained by the Join |
|             |maintain mapping between    | Proxy                  |
|             |the address and port number |                        |
|             |of the pledge and those     |                        |
|             |of the EST server.          |                        |
+-------------+----------------------------+------------------------+
|Packet size  |The size of the forwarded   |Size of the forwarded   |
|             |message is the same as the  |message is bigger than  |
|             |original message.           |the original,it includes|
|             |                            |additional source and   |
|             |                            |destination addresses.  |
+-------------+----------------------------+------------------------+
|Specification|The Join Proxy needs        |New JPY message to      |
|complexity   |additional functionality    |encapsulate DTLS message|
|             |to maintain state           |The EST server          |
|             |information, and modify     |and the Join Proxy      |
|             |the source and destination  |have to understand the  |
|             |addresses of the DTLS       |JPY message in order    |
|             |handshake messages          |to process it.          |
+-------------+----------------------------+------------------------+
]]></artwork></figure>

</section>
<section anchor="discovery" title="Discovery">

<t>It is assumed that Join Proxy seamlessly provides a coaps connection between Pledge and coaps EST server. In particular this section replaces section 4.2 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>The discovery follows two steps:</t>

<t><list style="numbers">
  <t>The pledge is one hop away from the EST server. The pledge discovers the link-local address of the EST_server as described in {I-D.ietf-ace-coap-est}. From then on, it follows the BRSKI process as described in {I-D.ietf-ace-coap-est}, using link-local addresses.</t>
  <t>The pledge is more than one hop away from a relevant EST server, and discovers the link-local address of a Join Proxy. The pledge then follows the BRSKI procedure using the link-local address of the Join Proxy.</t>
</list></t>

<t>Once a pledge is enrolled, it may function as Join Proxy. The Join Proxy functions are advertised as descibed below. Usually, the Join Proxy functions are offered via a “join” port, and not the standard coaps port. The Join Proxy MUST show the join port number when reponding to the .well-known/core request addressed to the standard coap/coaps port.</t>

<t>Three discovery cases are discussed: coap discovery, 6tisch discovery and GRASP discovery.</t>

<section anchor="pledge-discovery-of-join-proxy" title="Pledge discovery of Join Proxy">

<t>The pledge and Join Proxy are assumed to communicate via Link-Local addresses.</t>

<section anchor="coap-discovery" title="CoAP discovery">

<t>The discovery of the coaps EST server, using coap discovery, by the Join Proxy follows section 6 of <xref target="I-D.ietf-ace-coap-est"/>.</t>

</section>
<section anchor="autonomous-network" title="Autonomous Network">

<t>In the context of autonomous networks, the Join Proxy uses the DULL GRASP M_FLOOD mechanism to announce itself. Section 4.1.1 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> discusses this in more detail.
The Registrar announces itself using ACP instance of GRASP using M_FLOOD messages.
Autonomous Network Join Proxies MUST support GRASP discovery of EST server as decribed in section 4.3 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> .</t>

</section>
<section anchor="tisch-discovery" title="6tisch discovery">

<t>The discovery of EST server by the pledge uses the enhanced beacons as discussed in <xref target="I-D.ietf-6tisch-enrollment-enhanced-beacon"/>.</t>

</section>
</section>
<section anchor="join-proxy-discovers-est-server" title="Join Proxy discovers EST server">

<section anchor="autonomous-network-1" title="Autonomous Network">

<t>The pledge MUST listen for GRASP M_FLOOD <xref target="I-D.ietf-anima-grasp"/> announcements of the objective: “AN_Proxy”.
See section Section 4.1.1 <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> for the details of the objective.</t>

</section>
<section anchor="coap-discovery-1" title="CoAP discovery">

<t>In the context of a coap network without Autonomous Network support, discovery follows the standard coap policy.
The Pledge can discover a Join Proxy by sending a link-local multicast message to ALL CoAP Nodes with address FF02::FD. Multiple or no nodes may respond. The handling of multiple responses and the absence of responses follow section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>The presence and location of (path to) the Join Proxy resource are discovered by
sending a GET request to “/.well-known/core” including a resource type (rt)
parameter with the value “brski-proxy” <xref target="RFC6690"/>.
Upon success, the return payload will contain the root resource of the Join Proxy resources.
It is up to the implementation to choose its root resource; throughout this document the
example root resource /jp is used.
The example below shows the discovery of the presence and location of Join Proxy resources.</t>

<figure><artwork><![CDATA[
  REQ: GET coap://[FF02::FD]/.well-known/core?rt=brski-proxy

  RES: 2.05 Content
  <coaps://[IP_address]:jp-port/jp>; rt="brski-proxy";ct=62
]]></artwork></figure>

<t>Port numbers are assumed to be the default numbers 5683 and 5684 for coap and coaps respectively (sections 12.6 and 12.7 of <xref target="RFC7252"/> when not shown in the response.
Discoverable port numbers are usually returned for Join Proxy resources in the &lt;href&gt; of the payload (see section 5.1 of <xref target="I-D.ietf-ace-coap-est"/>).</t>

</section>
</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>It should be noted here that the contents of the CBOR map used to convey return address information is not protected.
However, the communication is between the Proxy and a known registrar are over the already secured portion of the network, so are not visible to eavesdropping systems.</t>

<t>All of the concerns in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 4.1 apply.
The pledge can be deceived by malicious AN_Proxy announcements.
The pledge will only join a network to which it receives a valid <xref target="RFC8366"/> voucher.</t>

<t>If the proxy/Registrar was not over a secure network, then an attacker could change the cbor array, causing the pledge to send traffic to another node.
If the such scenario needed to be supported, then it would be reasonable for the Proxy to encrypt the CBOR array using a locally generated symmetric key.
The Registrar would not be able to examine the result, but it does not need to do so.
This is a topic for future work.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document needs to create a registry for key indices in the CBOR map.  It should be given a name, and the amending formula should be IETF Specification.</t>

<section anchor="resource-type-registry" title="Resource Type registry">

<t>This specification registers a new Resource Type (rt=) Link Target Attributes in the “Resource Type (rt=) Link Target Attribute Values” subregistry under the “Constrained RESTful Environments (CoRE) Parameters” registry.</t>

<figure><artwork><![CDATA[
  rt="brski-proxy". This EST resource is used to query and return
  the supported EST resource of a Join Proxy placed between Pledge
  and EST server.
]]></artwork></figure>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Many thanks for the comments by Brian Carpenter.</t>

</section>
<section anchor="contributors" title="Contributors">

<t>Sandeep Kumar, Sye loong Keoh, and Oscar Garcia-Morchon are the co-authors of the draft-kumar-dice-dtls-relay-02. Their draft has served as a basis for this document. Much text from their draft is copied over to this draft.</t>

</section>
<section anchor="changelog" title="Changelog">

<section anchor="to-05" title="04 to 05">

<t><list style="symbols">
  <t>Terminology updated</t>
  <t>Emphasized new Join Proxy port</t>
</list></t>

</section>
<section anchor="to-02" title="01 to 02">

<t><list style="symbols">
  <t>extended the discovery section</t>
  <t>removed inconsistencies from the the flow diagrams</t>
  <t>Improved readability of the examples.</t>
  <t>stateful configurations reduced to one</t>
</list></t>

</section>
<section anchor="to-01" title="00 to 01">

<t><list style="symbols">
  <t>Added Contributors section</t>
  <t>Adapted content-formats to est-coaps formats</t>
  <t>Aligned examples with est-coaps examples</t>
  <t>Added statefull Proxy to stateless proxy</t>
</list></t>

</section>
<section anchor="to-00" title="00 to 00">

<t><list style="symbols">
  <t>added payload examples in appendix</t>
  <t>discovery for three cases: AN, 6tisch and coaps</t>
</list></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC6347;
&RFC7049;
&RFC8366;
&I-D.ietf-anima-bootstrapping-keyinfra;
&I-D.ietf-ace-coap-est;
&I-D.ietf-core-multipart-ct;
&I-D.ietf-6tisch-enrollment-enhanced-beacon;
&I-D.ietf-anima-constrained-voucher;
&I-D.ietf-anima-grasp;
&RFC2119;
&RFC8174;


    </references>

    <references title='Informative References'>

&RFC6763;
&I-D.richardson-anima-state-for-joinrouter;
&RFC6690;
&RFC7030;
&RFC7228;
&I-D.kumar-dice-dtls-relay;
&RFC4944;
&RFC7252;
&RFC6775;


    </references>


<section anchor="examples" title="Stateless Proxy payload examples">

<t>Examples are extensions of two examples shown in <xref target="I-D.ietf-ace-coap-est"/>.
The following content formats are used:</t>

<t><list style="symbols">
  <t>60:  application/cbor</t>
  <t>62:  application/multipart</t>
  <t>281: application/pkcs7-mime; smime-type=certs-only</t>
  <t>284: application/pkcs8</t>
  <t>286: application/pkcs10</t>
</list></t>

<t>For presentation purposes the payloads are abbreviated as follows:</t>

<t>cacrts request payload:</t>

<figure><artwork><![CDATA[
   <cacrts request payload> = <empty>
]]></artwork></figure>

<t>cacrts response payload:</t>

<figure><artwork><![CDATA[
   <cacrts response payload> =
   DTLS_encrypt(
   3082027b06092a864886f70d010702a082026c308202680201013100300b
   06092a864886f70d010701a082024e3082024a308201f0a0030201020209
   009189bcdf9c99244b300a06082a8648ce3d0403023067310b3009060355
   040613025553310b300906035504080c024341310b300906035504070c02
   4c4131143012060355040a0c0b4578616d706c6520496e63311630140603
   55040b0c0d63657274696669636174696f6e3110300e06035504030c0752
   6f6f74204341301e170d3139303130373130343034315a170d3339303130
   323130343034315a3067310b3009060355040613025553310b3009060355
   04080c024341310b300906035504070c024c4131143012060355040a0c0b
   4578616d706c6520496e6331163014060355040b0c0d6365727469666963
   6174696f6e3110300e06035504030c07526f6f742043413059301306072a
   8648ce3d020106082a8648ce3d03010703420004814994082b6e8185f3df
   53f5e0bee698973335200023ddf78cd17a443ffd8ddd40908769c55652ac
   2ccb75c4a50a7c7ddb7c22dae6c85cca538209fdbbf104c9a38184308181
   301d0603551d0e041604142495e816ef6ffcaaf356ce4adffe33cf492abb
   a8301f0603551d230418301680142495e816ef6ffcaaf356ce4adffe33cf
   492abba8300f0603551d130101ff040530030101ff300e0603551d0f0101
   ff040403020106301e0603551d1104173015811363657274696679406578
   616d706c652e636f6d300a06082a8648ce3d0403020348003045022100da
   e37c96f154c32ec0b4af52d46f3b7ecc9687ddf267bcec368f7b7f135327
   2f022047a28ae5c7306163b3c3834bab3c103f743070594c089aaa0ac870
   cd13b902caa1003100
   )
]]></artwork></figure>

<t>serverkeygen request payload:</t>

<figure><artwork><![CDATA[
   <serverkeygen request payload> =
   DTLS_encrypt(
   3081cf3078020100301631143012060355040a0c0b736b67206578616d70
   6c653059301306072a8648ce3d020106082a8648ce3d030107034200041b
   b8c1117896f98e4506c03d70efbe820d8e38ea97e9d65d52c8460c5852c5
   1dd89a61370a2843760fc859799d78cd33f3c1846e304f1717f8123f1a28
   4cc99fa000300a06082a8648ce3d04030203470030440220387cd4e9cf62
   8d4af77f92ebed4890d9d141dca86cd2757dd14cbd59cdf6961802202f24
   5e828c77754378b66660a4977f113cacdaa0cc7bad7d1474a7fd155d090d
   )
]]></artwork></figure>

<t>serverkeygen response payload:</t>

<figure><artwork><![CDATA[
   <serverkeygen response payload> =
   DTLS_encrypt(
   84                                   # array(4)
   19 011C                              # unsigned(284)
   58 8A                                # bytes(138)
   308187020100301306072a8648ce3d020106082a8648ce3d030107046d30
   6b02010104200b9a67785b65e07360b6d28cfc1d3f3925c0755799deeca7
   45372b01697bd8a6a144034200041bb8c1117896f98e4506c03d70efbe82
   0d8e38ea97e9d65d52c8460c5852c51dd89a61370a2843760fc859799d78
   cd33f3c1846e304f1717f8123f1a284cc99f
   19 0119                              # unsigned(281)
   59 01D3                              # bytes(467)
   308201cf06092a864886f70d010702a08201c0308201bc0201013100300b
   06092a864886f70d010701a08201a23082019e30820143a0030201020208
   126de8571518524b300a06082a8648ce3d04030230163114301206035504
   0a0c0b736b67206578616d706c65301e170d313930313039303835373038
   5a170d3339303130343038353730385a301631143012060355040a0c0b73
   6b67206578616d706c653059301306072a8648ce3d020106082a8648ce3d
   030107034200041bb8c1117896f98e4506c03d70efbe820d8e38ea97e9d6
   5d52c8460c5852c51dd89a61370a2843760fc859799d78cd33f3c1846e30
   4f1717f8123f1a284cc99fa37b307930090603551d1304023000302c0609
   6086480186f842010d041f161d4f70656e53534c2047656e657261746564
   204365727469666963617465301d0603551d0e04160414494be598dc8dbc
   0dbc071c486b777460e5cce621301f0603551d23041830168014494be598
   dc8dbc0dbc071c486b777460e5cce621300a06082a8648ce3d0403020349
   003046022100a4b167d0f9add9202810e6bf6a290b8cfdfc9b9c9fea2cc1
   c8fc3a464f79f2c202210081d31ba142751a7b4a34fd1a01fcfb08716b9e
   b53bdaadc9ae60b08f52429c0fa1003100
   )
]]></artwork></figure>

<section anchor="cacerts" title="cacerts">

<t>The request from Join Proxy to EST server looks like:</t>

<figure><artwork><![CDATA[
    Get coaps://192.0.2.1/est/crts
    (Accept: 62)
    (Content-format: 62)
    payload =
    82                    # array(2)
    18 3C                 # unsigned(60)
    83                    # array(3)
    69                    # text(9)
         464538303A3A414238 # "FE80::AB8"
    19 237D               # unsigned(9085)
    65                    # text(5)
         6964656E74       # "ident"
]]></artwork></figure>

<t>In CBOR Diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"]]
]]></artwork></figure>

<t>The response will then be:</t>

<figure><artwork><![CDATA[
     2.05 Content
     (Content-format: 62)
       Payload =
     84                                # array(4)
     18 3C                             # unsigned(60)
     83                                # array(3)
     69                                # text(9)
         464538303A3A414238            # "FE80::AB8"
     19 237D                           # unsigned(9085)
     65                                # text(5)
         6964656E74                    # "ident"
     19 0119                           # unsigned(281)
     59 027F                           # bytes(639)
     <cacrts response payload>
     ]
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               62, h'<cacrts response payload>']
]]></artwork></figure>

</section>
<section anchor="serverkeygen" title="serverkeygen">

<t>The request from Join Proxy to EST server looks like:</t>

<figure><artwork><![CDATA[
    Get coaps://192.0.2.1/est/skg
    (Accept: 62)
    (Content-Format: 62)
      Payload =
    83                                # array(4)
    18 3C                             # unsigned(60)
    83                                # array(3)
    69                                # text(9)
         464538303A3A414238           # "FE80::AB8"
    19 237D                           # unsigned(9085)
    65                                # text(5)
         6964656E74                   # "ident"
    19 011E                           # unsigned(286)
    58 D2                             # bytes(210)
    <serverkeygen request payload>
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               286, h'<serverkeygen request payload>']
]]></artwork></figure>

<t>The response will then be:</t>

<figure><artwork><![CDATA[
     2.05 Content
     (Content-format: 62)
       Payload =
     83                                # array(4)
     18 3C                             # unsigned(60)
     83                                # array(3)
     69                                # text(9)
         464538303A3A414238            # "FE80::AB8"
     19 237D                           # unsigned(9085)
     65                                # text(5)
         6964656E74                    # "ident"
     19 011E                           # unsigned(286)
     59 0269                           # bytes(617)
     <serverkeygen response payload>
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               286, h'<serverkeygen response payload>']
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
pEaTJdsCmgFYds4yWHAz/hVpdGEWp+2WxnfituPDagmDHcUFqvQveD7Q3Xr3
7AAbwbbxVbWmeh4z47UpR0UjuCrXZzT2EpttQ38WQ31Il09WOCkaKRewU2w7
NMuOMih2j0YFkbGWN/b1pJuztBVTZoZTNXaiA7CFZSL3tTELcHRSXaMBas6e
OkijE5YK08KmsP9K/NKJoOLWdKsQyjDmWnfuMNebUVRTnWdhzhQLsyhNnUiP
1KypFHyJ8yzudA0vXWukM++Be1bG5TDZx9SIZ3Q5DjwrYMpSnuxowy9vjovK
KPibPOn6ucrLtsWA8q5QRX4ClX814dVlJ4h46BpGp7+eXurBgdR6awc+6VP3
/pXU4YBizF6ptfEgjo4Cmh1c62unmuMeOae+JLsJJ6i236igqIuNXddTeHuV
wjzmU07dg3jpXP42l6U9b9ksHmC29052YNyY+zfWb6z3eAbNjY3pC/qEWawP
aGIwXm0ANnBILL1r8FzRuatkJgFpQCSIBOYq2MdqjTfMNo4runMUFDUn6kI8
XZzdI9/lsLnts6XycAM4utqFHn9z3N5xgtSZkToy0ucY41uxWIyoCOQF5Taa
gljFG82JRweEFwYcKGulMKUt5pUKQPC3Nc4yp2Ftn0Mm3xgxRuF+v/9wdHHe
/jamFM95V9zu+ukpg3twDrNIFKmkdVn3phEinBJob3qigEs+o+uJ7Yp9daLY
rK/UtIj1t2q6v7piXjK4VnB+X71176dLmI7WdZEXSyxhVfWy6paXCmm/UJDJ
2176kYINHmyOxU4+vnmjkP7206s379+ftIUKVOCQ58UapUdeUR7jowBKIztj
52lPgmheUMf46PAXdGUTfI2FPMJsr+PohSt9OVpi9uj4HK/gUkUKri5Bl23t
BvRlpU2EtUjAmExKzHpFYtJjPZ14NRV3q2ONSvSnIUGRss/8AwxmLK74Z6Xv
RCji6Td5mHyTR1oCLXC9fNWDL/ooLusUUTV6vIVlOycaUkh4XQAlhUwHdBls
A1n0JhAl0STNVYWYlLEi+ivi+kbM2d7Ru0/6sZoLUDiaCF2efDwtdKZCcuDm
iltUwYDISYlvrsuoov8B9lPMdjjkmvR1LGjXRRarcgKlA6lgQA3t2FDkEaxL
kHlgwzJSOhoUcm0GEEcg9bStd5QzkZcrlQl99cqezOevTsbsLWWyZVFWXqhy
I7SWqvJAWiB0jBeqvmWpR8gelcqzUGweAXhSaNtGufdWmv4eJ0++rqNCBNxz
rR4G2V9xTHsXB5sFAzqoKIVxhQVQaLUo/P70srGFgLG9F31LuaciVNm9mZPO
DvbL+sBqrpS2+XdKprO9qKw+Z/IlpD11T8Wf2bijj3ghplrH6NgdqqpJvINp
nFIsFjrnL9sBO+3qG/5P0yTrIUDvrlfNFRH9SA3XJYnxdYHZDroYY877ra6z
Q7buXuGGiSyVW+zB8uKvK1qvkpfT8Bah7EYOEnkqqvSyb1e3knR4XzI8YuzD
6Z/mRDeUnvmLFz9pVv55g3j/UtYvDSpYNPpiDi6wPdUnA/Db78jC41Rn55+U
gPw8/+tqhEIM+/v9twwm6tDz27h+6U/UNdnz1v+q+s5IpN8RoQf3ml5TP3Rp
31RqLB8sUq/aSHcDpUfqJ4jC9pXoVMyZjH3qBR8CKUfN8z/S90NfskkIS9aS
cji2dABIqdJVH+i19GTb68AI1RAp9MT/vKi/BZcw/eer+tv2hp9kYIC41dzT
TR+i4/jIFyGah4jw5SOIOWWiuaJgVeWII6yGxCM9dVVIFaPG+rxNAUE5/SWg
c11pjzC/EXpnjQrsJT8Rcfg0iTxd6l5ob11K1dnMSrcvm3BVZ122Dg46/1RA
h8pxUQqe3KlbvDJ5qVgem5VhOWRVQeMQoJsMH6cibS74jaioDBd1kbzYjmJx
BKqi8VRBnMq86p9iPfa+nUOnLsoWrVpbhJVe+i4Y3mPjYLHojtXRu3/7pLdv
WPXOBKTLqM6UghU++PJN82gPR+2ZJUMvl8ma1uZU8YXx6BuX5FP2Ut2SbvBJ
wSZsg9c1Jk1LdUVZXuaTiMMzVjpCOoQNt7Fn+8oc1SPrV+jIZZbnmLKeWsFV
4dsxVSxyvIJGCb5GCSiXoHkOAMv7NE8DV+DbYEhn7axIpCLV5WlVy9fyoEs9
H0hqE4W2OQ/EhzyXWN5Gl7H7/rZcUr39xDVjgcLOcl29j49kyor6rN6sk08A
E4V5ta8uVvgsX1F2n4XBZ/WO3h1tyHL3uZj2piqggG5sK8mRl43xNnmWJ+Zd
ZS3aY8Y6auEKmId4C2xxe/oMX6ShR0FfL7gx4Oz08hXr5GfJD/ygzdolGngN
jYK7c9dYNZL2pOrk7lDwDV4eyNP3S3zBDvzEGqgSUZG52szeo4ewf0WXAt9J
W0cNiiglKicyH4sDC3eJKcHT/CYri3yp6oiLD6cH7Lx5/2Kv2dxYv/PQt3Hq
qUmMChprryw90gycJhXOS72qZpFyoJi9O7iXEGKU/us/MqWm2XitCTjqKEb1
Sr1oV5b1FovhMXX1uWpEB3U17Rk01XdlBnJ/zMsVvsNZqjPRXGK1KGEGeqhW
rNgf8RWnQ3ZxJ/CwFljmj6K4lpz0Hmtc2fe8jDM+eluU4D7l8k0bWm0kH8tt
rI98Q3jwVaiRLZNvWSl70Q0F2qGqUol4lemdGIKCTjpWQmAgotOVzRx0Br3C
2oVCvSQgx2Kj3DDpuUVxRZGf7WEXfLqY4TG7+Q7TepWgCvmNbDldrgA8etQI
2dukW4En8TiXQ3NN1FzNC2Ndd0/ZF9mnFMvihuJWVTMPCg6D9LYG+bpbQ1vJ
cWdLTEULZDaeGI8w1K3HCWaHuprPjLZvtFXqYhDxbpELuQGbNuCoDRwlCL3J
IF3gjxJOL2h1z/wr9RbZSHpu6kc1AnPwWEKtz+vl0zdNZ/27uX57MN9YgTa1
rxxZA3hbAc9psHbAmgXR5K6wFiX7IvuZMSnyGSb1KJU3B3PeJOwaT1S+loo1
8LBoe3StOKG/2i/PmgqEXpGC8XyiulLRDDLqF7amxi6vzafAmtoORQD96Je6
oIFlFRs1VLJl0mtp6rioeRI68yeX0eAwb3NYqJr8zSYHaGa9wrej5Jux6vbO
ulwVOuujMKviCXqyPOOqmk3lEmCzMY9L43kDNagtMvndcIffs5fsd3hn7e73
spyk6SZDhV0TdXvATNiMZ22flKuyjz+4djixJ0Fk+/ZswkPfC0M/DezEduzA
nnBq9WPZyw/tCfzuuI5tu7Yd4fjBcY4c5wk5zuP0r5PaHAfiHPCrPaPx9swJ
Z1GcpLN4Npt4XgQzc5g1lLPGwk1sD0e5th/Aytg+g3Z3OqXxnu070DqdTt1u
K7SEdgyru56z0RJgC473Ymx1PNd2Jk0rh9bImwah7/hJYPuxP53Y3swXPqzh
+NDXw744nvpH0D/xXX8aTALPn/k+/Of6Dn1OfQFjEF+imd+F/sGU1of2NPBg
doTSdoQDOHQdd+ba8P+2G9D/e/SfM+XU6upWot+k22MTS9sxpPD3AJa2Y4jw
9yCWtmOI9v8glroYmsLe4R/fDiYcxzc8glzV5RqXeNGFobbthY43m8FeJ5Ev
Qiecpm6SEv3cdCrsSAh/Fs4CwO0Uu0/cJEmDME6cgHuem6ZJmCSJB6gJA38W
T6ewVR7TIV0cR8E09vjU5kEcJEkUxJNJwoUfh9M45lMXOH+WJlGUOrYXz7gL
qwMu4f8dKX9OIncM/wrbc3z4z5t4symA6QvYexpznrpTPxYeT9JUuG6ceiBz
EeGfhy4KlpoBhMRz8BcQ1YdnIfrRTDiL3cyCjAiTpkCDqWvb6ltLG4A0xd9w
PPXylFQjzZs+QE7PCeCXaeg4rkn7AAgB30JJ/4Z3gG+A1sk2+QdKhgiMN7Un
E9BACdFfuEEM7ONMvdidCBRbnk4nieenbhSIGNpCIEo68YMoFrHrh2kQBanj
Tt1JQPRLYTbbC/gk5GIaA7wAkRu5sRu6XsThA3Al8J8LrDSdebEdzjjnNo/D
gOQPWMSNZvYE0ItaEf7DXw+ktpY+MURHVyLfoft3dduht50YaBJInYxE8oel
NHD9yA8mhHGJbcI7YLwrTY+VJIf4Lgpjx3GCEHA/CwXQxI9tF+YWaSSA45NQ
uKHgs0DMEn+aTCdx6Pl2PA3hE+kdJ0kAk6CYAhtQ77mBb6cgMbNgNktQ8Fw3
BdTDILAhXuoETpCGzsRNHegt9TaYixTsib2DXwLiFw8p7IZBnHhiFqc+6d0w
AUYJgnQ2EZFIvHBmJ7PE8ZwkhmniZBJMgW0cL46S6QyME7CtE+I8k3Tikd6A
XYZxEARTgD2MQKH5NvdmMCMwO9jgBJgkjoOIJwFME3g8SBNnOk1AhSTbOWSr
Vd/ZbxuP4PsXD/49k4mKfe+AyDIDJ9s5fmjIOq/IXd4H0tG4acjCo4eXwkr2
at9xwwPNwyBGmn8fy4ce6gji4Uj6IzYyZgTcFAThNPJBnwPP25GfAIXS2EmA
lWaTKRqTKbKXEDEPpO1yg0kEgjMLoiTkPneAVxou383hZDt3cvluDpe6YxeX
Sw5viTJ7AlEcSRQcd+I+jiieH2iiAFLjdIdD6AAi6N8ofpJDCLuS42bSMQRt
1XEICSnOxE9EOA2cKVjpyS53cFPh0fpblJ5UeBsOFv4bgjUI8F9CWs/JIteq
6YEO1nZFK5lyaN3HKVqCv6dsn6JoCf4nsWGXBUkoBtmQuwFQIpi17iG5CR7S
gUgYI91p/zbuxnaA+qGHOwR6OanjO4kH7OBPfTEFZHoxGl38hm4BOYFTn+iH
jt6AIz0ddpS8mReJ6SxM4jCJYimUwJWBE3uhH4F6BkSAWY+FP3G2O0p6Fhwv
Z9o1y1ZzowIamNqXLgr3IscPwFuaQcw/AxYPHVv4UerzycwGwqZJGs8iCHxS
wcGRJIcqDtPY5Z4P2JqlE0ATzRSCFnMiUFBgmBwegJfjemBQOGwpTiPwSh0/
mlFKLpq6ERifBFxNAUrQDsEd8iaz2E4HHJRnz8BUYYgsz26170E5HiOPVBdm
+QPekaj6lyS+FzXTp3PObDK2x5Ox8wIme4HhKHXZPwIMruo5xPYH8ofjTnqm
bdDZCjJrLJwM6y1pt9QQJ2TuptkylKJvy47hoD7Us7mykz+obJ9RYm9/dtC+
QQt0Ag8fNMORe4R+uxtCr71Xp6E9nx99F+5J2GZs4gYn22GDsGKqFp7uWHhq
LAyCgSJzGnhNnz26lLInKatvzJw0N2YMYjX4ZT/59iH7yQD4kCEwh3qyn9U1
lkvjfFIeFNHhSNS5J9M7rWU7KAx/5x0iP8JZ6Xoq20i+BcWa/FvoP7SO4oUt
zNAd8RjG6Azo88gWJtmym5ZhtnDMAHQ7uac3QLOShuwB92PA95DexyR4tXOY
dD18V2Nua/ZKNv/c5e3kf8jbh1YPIH9yyK6fbwVC3+l69sx0x/8XVWf1+eoB
zflqQ666YvV4bvd26dEtxN6tU4dW2alfuwOeJlKP1bpbdvKQBh4A7dHy1BUn
KU2njwNrEvpyFYivTgbNoDFKChN4C3LI7rTC/7IkAeAkSjtheP5/Z1yeKgb/
b1wkdP9HxuWp4iCNy07cNcbFCbRx2Z1E+cdIxBYTY/037Y1JcDt3AAA=

-->

</rfc>

